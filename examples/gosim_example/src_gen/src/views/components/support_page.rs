use makepad_widgets :: * ; live_design ! { import makepad_widgets :: base :: * ; import makepad_widgets :: theme_desktop_dark :: * ; import makepad_draw :: shader :: std :: * ; support_page = <View >{ align : { x : 0.5 , y : 0 } , flow : Down , width : All , height : 940 , < Label >{ draw_text : { text_style : { font_size : 12 , } , fn get_color (self) -> vec4 { return vec4 (0.0 , 0.0 , 0.0 , 1.0) } } , width : Fit , text : "Proudly supported by:" , } < View >{ flow : Down , width : All , height : 240 , < View >{ align : { x : 0.5 , y : 0.5 } , spacing : 20 , height : 110 , < RoundedView >{ draw_bg : { instance radius : 4.0 fn get_color (self) -> vec4 { return vec4 (0.956 , 0.956 , 0.956 , 1.0) } } , show_bg : true , align : { x : 0.5 , y : 0.5 } , width : 220 , height : 90 , < Image >{ width : 172 , height : 68 , source : dep ("crate://self/static/support_1.png") , } } < RoundedView >{ draw_bg : { instance radius : 4.0 fn get_color (self) -> vec4 { return vec4 (0.956 , 0.956 , 0.956 , 1.0) } } , show_bg : true , align : { x : 0.5 , y : 0.5 } , width : 220 , height : 90 , < Image >{ width : 172 , height : 68 , source : dep ("crate://self/static/support_2.png") , } } < RoundedView >{ draw_bg : { instance radius : 4.0 fn get_color (self) -> vec4 { return vec4 (0.956 , 0.956 , 0.956 , 1.0) } } , show_bg : true , align : { x : 0.5 , y : 0.5 } , width : 220 , height : 90 , < Image >{ width : 172 , height : 68 , source : dep ("crate://self/static/support_3.png") , } } < RoundedView >{ draw_bg : { instance radius : 4.0 fn get_color (self) -> vec4 { return vec4 (0.956 , 0.956 , 0.956 , 1.0) } } , show_bg : true , align : { x : 0.5 , y : 0.5 } , width : 220 , height : 90 , < Image >{ width : 172 , height : 68 , source : dep ("crate://self/static/support_4.png") , } } } < View >{ align : { x : 0.5 , y : 0.5 } , spacing : 20 , height : 110 , < RoundedView >{ draw_bg : { instance radius : 4.0 fn get_color (self) -> vec4 { return vec4 (0.956 , 0.956 , 0.956 , 1.0) } } , show_bg : true , align : { x : 0.5 , y : 0.5 } , width : 220 , height : 90 , < Image >{ width : 172 , height : 68 , source : dep ("crate://self/static/support_5.png") , } } < RoundedView >{ draw_bg : { instance radius : 4.0 fn get_color (self) -> vec4 { return vec4 (0.956 , 0.956 , 0.956 , 1.0) } } , show_bg : true , align : { x : 0.5 , y : 0.5 } , width : 220 , height : 90 , < Image >{ width : 172 , height : 68 , source : dep ("crate://self/static/support_6.png") , } } } } other_wrap = < View >{ align : { x : 0.5 , y : 0.5 } , spacing : 20 , width : All , height : 640 , < RoundedView >{ draw_bg : { instance radius : 4.0 fn get_color (self) -> vec4 { return vec4 (0.956 , 0.956 , 0.956 , 1.0) } } , padding : { top : 42 , right : 32 , bottom : 42 , left : 32 } , align : { x : 0.5 , y : 0 } , flow : Down , spacing : 24 , width : 460 , height : 640 , < Label >{ draw_text : { text_style : { font : { path : dep ("crate://self/static/GoNotoKurrent-Bold.ttf") } , font_size : 18 , } , fn get_color (self) -> vec4 { return vec4 (0.0 , 0.0 , 0.0 , 1.0) } } , width : 396 , text : "A Global Nexus for Open Source Innovation" , } < Label >{ draw_text : { text_style : { font_size : 10 , } , fn get_color (self) -> vec4 { return vec4 (0.0 , 0.0 , 0.0 , 1.0) } } , width : Fill , text : "The global tech landscape is replete with innovations, and much of its foundation is built upon the ethos of open source collaboration. At the forefront of championing this collaboration stands GOSIM, a platform dedicated to nurturing the brightest grassroots open-source projects from their inception to maturity." , } < Label >{ draw_text : { text_style : { font_size : 10 , } , fn get_color (self) -> vec4 { return vec4 (0.0 , 0.0 , 0.0 , 1.0) } } , width : Fill , text : "GOSIM emerged from the shared vision of a global open-source community. Organized by and for the community, this entirely volunteer-based endeavor has one prime objective: to provide a stage where innovative open-source projects can shine, collaborate, and evolve. It's not just a platform; it's a movement. One that wholeheartedly embraces an open, diverse, and inclusive culture. If a project is global, innovative, grass roots ,and open-source, it has found its home at GOSIM." , } < View >{ align : { x : 0.5 , y : 0.5 } , spacing : 6 , height : Fit , < Image >{ width : 18 , height : 18 , source : dep ("crate://self/static/check.png") , } < Label >{ draw_text : { text_style : { font_size : 10 , } , fn get_color (self) -> vec4 { return vec4 (0.0 , 0.0 , 0.0 , 1.0) } } , width : Fill , text : "Organized by and created for the open-source community." , } } < View >{ align : { x : 0.5 , y : 0.5 } , spacing : 6 , height : Fit , < Image >{ width : 18 , height : 18 , source : dep ("crate://self/static/check.png") , } < Label >{ draw_text : { text_style : { font_size : 10 , } , fn get_color (self) -> vec4 { return vec4 (0.0 , 0.0 , 0.0 , 1.0) } } , width : Fill , text : "Subscribes to an open, diverse, and inclusive culture." , } } < View >{ align : { x : 0.5 , y : 0.5 } , spacing : 6 , height : Fit , < Image >{ width : 18 , height : 18 , source : dep ("crate://self/static/check.png") , } < Label >{ draw_text : { text_style : { font_size : 10 , } , fn get_color (self) -> vec4 { return vec4 (0.0 , 0.0 , 0.0 , 1.0) } } , width : Fill , text : "Volunteer based." , } } < Button >{ draw_bg : { uniform border_radius : 3.0 fn pixel (self) -> vec4 { let sdf = Sdf2d :: viewport (self . pos * self . rect_size) let bg_color = mix (vec4 (0.0 , 0.427 , 0.529 , 1.0) , vec4 (0.517 , 0.912 , 0.972 , 1.0) , self . hover) sdf . box (1.0 , 1.0 , self . rect_size . x - 2.0 , self . rect_size . y - 2.0 , self . border_radius) sdf . fill_keep (bg_color) return sdf . result } } , draw_text : { text_style : { font : { path : dep ("crate://self/static/GoNotoKurrent-Bold.ttf") } , } , fn get_color (self) -> vec4 { return mix (vec4 (1.0 , 1.0 , 1.0 , 1.0) , vec4 (0.0 , 0.0 , 0.0 , 1.0) , self . hover) } } , width : 380 , height : Fit , padding : { top : 16 , right : 16 , bottom : 16 , left : 16 } , text : "The Three Pillars of GOSIM" , } } < RoundedView >{ draw_bg : { instance radius : 4.0 fn get_color (self) -> vec4 { return vec4 (0.956 , 0.956 , 0.956 , 1.0) } } , align : { x : 0.5 , y : 0 } , flow : Down , spacing : 24 , width : 460 , height : 640 , < Image >{ width : Fill , height : Fill , fit : Vertical , source : dep ("crate://self/static/bg.jpg") , } } } } }