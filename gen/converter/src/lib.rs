//! 这一层的主要目的在于当解析gen文件获取到Basic AST之后，根据Basic AST的内容生成GenUI的AST
//! 然后再分析GenUI的AST生成对应的策略器，然后根据策略器进行转换
//! - 其中包含，将AST部分中的style标签包裹的样式进行平展
//! - 将所有标签转换为一个模型，这个模型会包括标签名，标签id，标签class，标签属性，标签子节点等信息（通过模型管理）
//!    - 这个模型会在generator层进行处理，生成对应的代码
//!    - 对于这个模型主要处理在于属性和行为的处理，这两部分会进行遍历，并使用对应的策略器进行处理
//! 
//! 主要关注在于内置的关键字，例如模版中的prop属性，含有id, class, inherits等关键字，这些关键字会对应不同的策略器
//! 这些策略器会在generator层进行处理，生成对应的代码
//! 所有的策略器都会需要传入一个闭包作为参数
//! 例如属性策略器会使用带有标签名称、属性名称、属性值的闭包（属性值可能来自style部分，可能来自script部分）
pub mod keyword;
pub mod strategy;
pub mod model;
pub mod error;